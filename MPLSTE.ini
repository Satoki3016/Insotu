[General]
network = MPLSTE
sim-time-limit = 10s

**.ppp[*].ingressTC.typename = "TC1"
**.ingressTC.numClasses = 3
**.ingressTC.classifier.filters = xmldoc("Mfilters.xml")
**.ingressTC.marker.dscps = "EF AF41 AF42"

**.LER*.ppp[*].queue.typename = "DSQueue1"
**.Wired.ppp[*].queue.typename = "DSQueue1"
**.Wireless.ppp[*].queue.typename = "DSQueue1"
**.LER*.ppp[*].queue.packetCapacity = -1
**.LER*.ppp[*].queue.*.packetCapacity = 100
**.LER*.ppp[*].queue.wrr.weights = "6 3 1 0 0"
**.Wired.ppp[*].queue.wrr.weights = "6 3 1 0 0"
**.Wireless.ppp[*].queue.wrr.weights = "6 3 1 0 0"

*.HighTx.numApps = 1
**.HighTx.app[0].typename = "UdpBasicBurst"
**.HighTx.app[0].localPort = 100
**.HighTx.app[0].destPort = 100
**.HighTx.app[0].messageLength = 1400bytes
**.HighTx.app[0].sendInterval = 4us
**.HighTx.app[0].destAddresses = "HighRx"
**.HighTx.app[0].packetName="HighTx"
**.HighTx.app[0].burstDuration = 1s
**.HighTx.app[0].sleepDuration = 0s
**.HighTx.app[0].chooseDestAddrMode="once"
**.HighTx.app[0].startTime=0s

**.HighRx.numApps = 1
**.HighRx.app[0].typename = "UdpSink"
**.HighRx.app[0].localPort = 100

*.MidTx.numApps = 1
**.MidTx.app[0].typename = "UdpBasicBurst"
**.MidTx.app[0].localPort = 100
**.MidTx.app[0].destPort = 100
**.MidTx.app[0].messageLength = 1400bytes
**.MidTx.app[0].sendInterval = 4us
**.MidTx.app[0].destAddresses = "MidRx"
*.MidTx.app[0].packetName="MidTx"
**.MidTx.app[0].burstDuration = 1s
**.MidTx.app[0].sleepDuration = 0s
**.MidTx.app[0].chooseDestAddrMode="once"
**.MidTx.app[0].startTime=0s

**.MidRx.numApps = 1
**.MidRx.app[0].typename = "UdpSink"
**.MidRx.app[0].localPort = 100

*.LowTx.numApps = 1
**.LowTx.app[0].typename = "UdpBasicBurst"
**.LowTx.app[0].localPort = 100
**.LowTx.app[0].destPort = 100
**.LowTx.app[0].messageLength = 1400bytes
**.LowTx.app[0].sendInterval = 4us
**.LowTx.app[0].destAddresses = "LowRx"
*.LowTx.app[0].packetName="LowTx"
**.LowTx.app[0].burstDuration = 1s
**.LowTx.app[0].sleepDuration = 0s
**.LowTx.app[0].chooseDestAddrMode="once"
**.LowTx.app[0].startTime=0s

**.LowRx.numApps = 1
**.LowRx.app[0].typename = "UdpSink"
**.LowRx.app[0].localPort = 100

# ip config
**.HighRx.ipv4.routingTable.routingFile = "HighRx.rt"
**.HighTx.ipv4.routingTable.routingFile = "HighTx.rt"
**.MidRx.ipv4.routingTable.routingFile = "MidRx.rt"
**.MidTx.ipv4.routingTable.routingFile = "MidTx.rt"
**.LowRx.ipv4.routingTable.routingFile = "LowRx.rt"
**.LowTx.ipv4.routingTable.routingFile = "LowTx.rt"


# LSR configuration
**.LER1.classifier.config = xmldoc("LER1_fec.xml")
**.LER1.rsvp.traffic = xmldoc("LER1_rsvp.xml")

**.LER*.rsvp.helloInterval = 0.25s
**.LER*.rsvp.helloTimeout = 1s
**.Wired*.rsvp.helloInterval = 0.25s
**.Wired*.rsvp.helloTimeout = 1s
**.Wireless*.rsvp.helloInterval = 0.25s
**.Wireless*.rsvp.helloTimeout = 1s

**.LER1.ipv4.routingTable.routingFile = "LER1.rt"
**.LER2.ipv4.routingTable.routingFile = "LER2.rt"

**.Wired.ipv4.routingTable.routingFile = "Wired.rt"
**.Wireless.ipv4.routingTable.routingFile = "Wireless.rt"




# NIC configuration
#**.ppp[*].queue.typename = "DropTailQueue" # in routers
#**.ppp[*].queue.packetCapacity = 10  # in routers

# scenario
*.*.hasStatus = true
**.scenarioManager.script = xmldoc("Mscenario.xml")

*.ipv4NetworkConfigurator.addStaticRoutes = false
#*.ipv4NetworkConfigurator.dumpConfig = "config.xml"



