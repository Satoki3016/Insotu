[RSVPTEori1]
network = RSVPTEori1
sim-time-limit = 10s

**.LSR*.ppp[*].ingressTC.typename = "TC1"
**.ingressTC.numClasses = 3
**.ingressTC.classifier.filters = xmldoc("filters.xml")
**.ingressTC.marker.dscps = "EF AF41 AF42"

**.LSR*.ppp[*].queue.typename = "DSQueue1"
**.*Router*.ppp[*].queue.typename = "DSQueue1"
rsvp**.LSR*.ppp[*].queue.packetCapacity = -1
**.LSR*.ppp[*].queue.*.packetCapacity = 100
**.LSR*.ppp[*].queue.wrr.weights = "6 3 1 0 0"
**.*Router.ppp[*].queue.wrr.weights = "6 3 1 0 0"


*.HighClient.numApps = 1
**.HighClient.app[0].typename = "UdpBasicApp"
**.HighClient.app[0].localPort = 100
**.HighClient.app[0].destPort = 100
**.HighClient.app[0].messageLength = 1400 bytes
**.HighClient.app[0].sendInterval = 1us
**.HighClient.app[0].destAddresses = "HighServer"
*.HighClient.app[0].packetName="HighClient"

**.HighServer.numApps = 1
**.HighServer.app[0].typename = "UdpSink"
**.HighServer.app[0].localPort = 100

*.MidClient.numApps = 1
**.MidClient.app[0].typename = "UdpBasicApp"
**.MidClient.app[0].localPort = 100
**.MidClient.app[0].destPort = 100
**.MidClient.app[0].messageLength = 1400 bytes
**.MidClient.app[0].sendInterval = 1us
**.MidClient.app[0].destAddresses = "MidServer"
*.MidClient.app[0].packetName="MidClient"

**.MidServer.numApps = 1
**.MidServer.app[0].typename = "UdpSink"
**.MidServer.app[0].localPort = 100

*.LowClient.numApps = 1
**.LowClient.app[0].typename = "UdpBasicApp"
**.LowClient.app[0].localPort = 100
**.LowClient.app[0].destPort = 100
**.LowClient.app[0].messageLength = 1400 bytes
**.LowClient.app[0].sendInterval = 1us
**.LowClient.app[0].destAddresses = "LowServer"
*.LowClient.app[0].packetName="LowClient"

**.LowServer.numApps = 1
**.LowServer.app[0].typename = "UdpSink"
**.LowServer.app[0].localPort = 100

# ip config
**.HighServer.ipv4.routingTable.routingFile = "HighServer.rt"
**.HighClient.ipv4.routingTable.routingFile = "HighClientsub.rt"
**.MidServer.ipv4.routingTable.routingFile = "MidServer.rt"
**.MidClient.ipv4.routingTable.routingFile = "MidClientsub.rt"
**.LowServer.ipv4.routingTable.routingFile = "LowServer.rt"
**.LowClient.ipv4.routingTable.routingFile = "LowClientsub.rt"
# LSR configuration
**.LSR1.classifier.config = xmldoc("LSR1_fec.xml")
**.LSR1.rsvp.traffic = xmldoc("LSR1_rsvp.xml")

**.LSR*.rsvp.helloInterval = 0.25s
**.LSR*.rsvp.helloTimeout = 1s
**.WiredRouter*.rsvp.helloInterval = 0.25s
**.WiredRouter*.rsvp.helloTimeout = 1s
**.WirelessRouter*.rsvp.helloInterval = 0.25s
**.WirelessRouter*.rsvp.helloTimeout = 1s
**.ServerRouter*.rsvp.helloInterval = 0.25s
**.ServerRouter*.rsvp.helloTimeout = 1s

**.LSR1.ipv4.routingTable.routingFile = "LSR1sub.rt"
**.LSR2.ipv4.routingTable.routingFile = "LSR2.rt"
**.LSR3.ipv4.routingTable.routingFile = "LSR3.rt"
**.LSR4.ipv4.routingTable.routingFile = "LSR4.rt"
**.LSR5.ipv4.routingTable.routingFile = "LSR5.rt"
**.LSR6.ipv4.routingTable.routingFile = "LSR6.rt"
**.LSR7.ipv4.routingTable.routingFile = "LSR7.rt"
**.WiredRouter.ipv4.routingTable.routingFile = "WiredRouter.rt"
**.WirelessRouter.ipv4.routingTable.routingFile = "WirelessRouter.rt"
**.ServerRouter.ipv4.routingTable.routingFile = "ServerRouter.rt"
**.ClientRouter.ipv4.routingTable.routingFile = "ClientRouter.rt"

# NIC configuration
#**.ppp[*].queue.typename = "DropTailQueue" # in routers
#**.ppp[*].queue.packetCapacity = 10  # in routers

# scenario
*.*.hasStatus = true
**.scenarioManager.script = xmldoc("scenarioori1.xml")



